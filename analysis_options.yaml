# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  
  # excessões para o dart analyzer não verificar
  # exclude: 
  #   - lib/**/file_name.dart

  # personalizar como as regras aplicadas na [linter > rures:] 
  # serão tratadas(error, warning, ignore, info)
  errors: 
    unnecessary_await_in_return: warning
    avoid_print: warning
    unused_import: warning
    always_declare_return_types: error
    dead_code: error

# The lint rules applied to this project can be customized in the
# section below to disable rules from the `package:flutter_lints/flutter.yaml`
# included above or to enable additional rules. A list of all available lints
# and their documentation is published at
# https://dart-lang.github.io/linter/lints/index.html.
linter:
  rules:

    # usar o BuildContext apenas dentro de funções sincrona 
    # https://dart.dev/tools/diagnostic-messages?utm_source=dartdev&utm_medium=redir&utm_id=diagcode&utm_content=use_build_context_synchronously#use_build_context_synchronously
    use_build_context_synchronously: false

    # preferência para importação de arquivos(.dart) do projeto será relativa 
    prefer_relative_imports: true

    prefer_const_constructors: true
    
    camel_case_types: true
    
    # quando a função retornar uma Future, é desnecessario usar o await
    unnecessary_await_in_return: true 
    
    # Alertar quando uma variável não estiver sendo usando dentro das classe ou funções
    avoid_unused_constructor_parameters: true 
    
    # Dar um alert para criar funções que retornem algum tipo de valor, mesmo que seja uma void
    always_declare_return_types: true 
    
    # alertar para não usar método prin() do dart
    avoid_print: true
    
    # dar um alerta para definir as variáveis como constante caso elas não serão multavéis
    prefer_final_locals: true
    prefer_final_fields: true

    # inserir uma vígula em cada atributo dos objetos
    require_trailing_commas: true

    # Não analizar o uso da lib 'dart:html'
    # avoid_web_libraries_in_flutter: false
    
    # importar pela raíz da package do projeto
    # always_use_package_imports: true 
    
    # preferir que use aspas simples nas strings
    # prefer_single_quotes: true 

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
